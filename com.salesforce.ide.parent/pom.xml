<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.salesforce.ide</groupId>
	<artifactId>com.salesforce.ide.parent</artifactId>
	<version>39.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<organization>
		<name>Salesforce.com</name>
		<url>https://developer.salesforce.com/</url>
	</organization>
	<properties>
		<tycho.version>0.24.0</tycho.version>
		<surefire-report.version>2.19.1</surefire-report.version>
		<jacoco.version>0.7.6.201602180812</jacoco.version>
		<resources.version>2.7</resources.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<eclipse-p2-repo.url>http://download.eclipse.org/releases/mars</eclipse-p2-repo.url>

		<os-jvm-flags /> <!-- for the default case -->

		<test.keyring.file>${project.build.directory}/.eclipse.keyring</test.keyring.file>
		<test.keyring.password>${project.build.directory}/../../.gitignore</test.keyring.password>
		<test.appserver>-Dappserver-for-test=nchen-wsm2:6109</test.appserver>
		<test.appArgs>-eclipse.keyring ${test.keyring.file} -eclipse.password ${test.keyring.password}</test.appArgs>
		<test.vmArgs>${os-jvm-flags} -Dsfdc-internal=true -Xms512m -Xmx2048m ${test.appserver}</test.vmArgs>
		<test.topLevel>${project.build.directory}/../../..</test.topLevel>
		<test.reportsDirectory>${project.build.directory}/surefire-reports</test.reportsDirectory>
		<test.screenshotsDirectory>${test.reportsDirectory}/screenshots</test.screenshotsDirectory>
		<test.skipUnitTests>false</test.skipUnitTests>
		<test.skipUITests>false</test.skipUITests>
		<test.skipBotTests>false</test.skipBotTests>
		
		<!-- Our module structure is not typical. If we have unit & integration
		tests in each module, there will be a Jacoco data file in each
		and Sonarqube can parse that data file and figure out the code coverage
		of the sources in that module. Instead, we have three modules that have
		tests for all the other modules. The trick we're doing here is to output
		all code coverage into a top level Jacoco data file. Then, we copy
		this data file to each non-test module. Then, let Sonar do its job. -->
		<test.jacoco.fileName>jacoco.exec</test.jacoco.fileName>
		<test.jacoco.filePath>${test.topLevel}/${test.jacoco.fileName}</test.jacoco.filePath>
		
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.jacoco.itReportPath>${sonar.jacoco.reportPath}</sonar.jacoco.itReportPath>
		<sonar.language>java</sonar.language>
	</properties>

	<repositories>
		<repository>
			<id>eclipse-p2-repo</id>
			<url>${eclipse-p2-repo.url}</url>
			<layout>p2</layout>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>macosx-jvm-flags</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<os-jvm-flags>-XstartOnFirstThread</os-jvm-flags>
			</properties>
		</profile>
		<profile>
			<id>sign-jars</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jarsigner-plugin</artifactId>
						<version>1.4</version>
						<configuration>
							<keystore>${sfdc.keystore}</keystore>
							<storepass>${sfdc.storepass}</storepass>
							<alias>sfdc</alias>
							<keypass>${sfdc.keypass}</keypass>
						</configuration>
						<executions>
							<execution>
								<id>sign</id>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>internal</id>
			<activation>
				<property>
					<name>!external</name>
				</property>		
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<target>
								<artifact>
									<groupId>com.salesforce.ide</groupId>
									<artifactId>com.salesforce.ide.targetdefinition</artifactId>
									<version>39.0.0-SNAPSHOT</version>
								</artifact>
							</target>
							<environments>
								<environment>
									<os>linux</os>
									<ws>gtk</ws>
									<arch>x86</arch>
								</environment>
								<environment>
									<os>linux</os>
									<ws>gtk</ws>
									<arch>x86_64</arch>
								</environment>
								<environment>
									<os>win32</os>
									<ws>win32</ws>
									<arch>x86</arch>
								</environment>
								<environment>
									<os>win32</os>
									<ws>win32</ws>
									<arch>x86_64</arch>
								</environment>
								<environment>
									<os>macosx</os>
									<ws>cocoa</ws>
									<arch>x86_64</arch>
								</environment>
							</environments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>external</id>
			<activation>
				<property>
					<name>external</name>
				</property>		
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<version>${tycho.version}</version>
						<configuration>
							<target>
								<artifact>
									<groupId>com.salesforce.ide</groupId>
									<artifactId>com.salesforce.ide.targetdefinition.external</artifactId>
									<version>39.0.0-SNAPSHOT</version>
								</artifact>
						</target>
						<environments>
							<environment>
								<os>linux</os>
								<ws>gtk</ws>
								<arch>x86</arch>
							</environment>
							<environment>
								<os>linux</os>
								<ws>gtk</ws>
								<arch>x86_64</arch>
							</environment>
							<environment>
								<os>win32</os>
								<ws>win32</ws>
								<arch>x86</arch>
							</environment>
							<environment>
								<os>win32</os>
								<ws>win32</ws>
								<arch>x86_64</arch>
							</environment>
							<environment>
								<os>macosx</os>
								<ws>cocoa</ws>
								<arch>x86_64</arch>
								</environment>
							</environments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<build>
	<plugins>
		<plugin>
			<groupId>org.eclipse.tycho</groupId>
			<artifactId>tycho-maven-plugin</artifactId>
			<version>${tycho.version}</version>
			<extensions>true</extensions>
		</plugin>
		<plugin>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>${jacoco.version}</version>
			<configuration>
				<!-- Append all code coverage info to one file -->
				<destFile>${test.jacoco.filePath}</destFile>
				<append>true</append>
			</configuration>
			<executions>
				<execution>
					<id>agent-for-ut</id>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
				<execution>
					<id>agent-for-it</id>
					<goals>
						<goal>prepare-agent-integration</goal>
					</goals>
				</execution>
			</executions>
		</plugin>
		
	</plugins>
	</build>
	<name>Force.com IDE</name>
	<url>https://developer.salesforce.com/page/Force.com_IDE</url>
</project>
