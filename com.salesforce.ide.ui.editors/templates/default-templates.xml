<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>
  <template
    context="com.salesforce.ide.ui.editors.templates.contextType.apexClass"
    description="Create a new Apex class"
    id="com.salesforce.ide.ui.editor.templates.apex.class.default"
    name="New Apex Class"
    autoinsert="false"
    >public with sharing class ${class_name} {
    ${cursor}
}</template>
  <template
    context="com.salesforce.ide.ui.editors.templates.contextType.apexClass"
    description="Create a new Inbound Email Service handler"
    id="com.salesforce.ide.ui.editor.templates.apex.class.inboundEmailService"
    name="New Inbound Email Service"
    autoinsert="false"
    >/**
 * Email services are automated processes that use Apex classes
 * to process the contents, headers, and attachments of inbound
 * email.
 */
global class ${class_name} implements Messaging.InboundEmailHandler {

    global Messaging.InboundEmailResult handleInboundEmail(Messaging.InboundEmail email, Messaging.InboundEnvelope envelope) {
        Messaging.InboundEmailResult result = new Messaging.InboundEmailresult();
        ${cursor}
        return result;
    }
}</template>
  <template
    context="com.salesforce.ide.ui.editors.templates.contextType.apexClass"
    description="Create a new Apex unit test"
    id="com.salesforce.ide.ui.editor.templates.apex.class.unitTest"
    name="New Apex Unit Test"
    autoinsert="false"
    >/**
 * This class contains unit tests for validating the behavior of Apex classes
 * and triggers.
 *
 * Unit tests are class methods that verify whether a particular piece
 * of code is working properly. Unit test methods take no arguments,
 * commit no data to the database, and are flagged with the testMethod
 * keyword in the method definition.
 *
 * All test methods in an organization are executed whenever Apex code is deployed
 * to a production organization to confirm correctness, ensure code
 * coverage, and prevent regressions. All Apex classes are
 * required to have at least 75% code coverage in order to be deployed
 * to a production organization. In addition, all triggers must have some code coverage.
 * 
 * The @isTest class annotation indicates this class only contains test
 * methods. Classes defined with the @isTest annotation do not count against
 * the organization size limit for all Apex scripts.
 *
 * See the Apex Language Reference for more information about Testing and Code Coverage.
 */
@isTest
private class ${class_name} {

    static testMethod void myUnitTest() {
        // TO DO: implement unit test
        ${cursor}
    }
}</template>
  <template
    context="com.salesforce.ide.ui.editors.templates.contextType.apexComponent"
    description="Create a new Visualforce component"
    id="com.salesforce.ide.ui.editor.templates.apex.component.default"
    name="New Apex Component"
    autoinsert="false"
    >&lt;apex:component&gt;
&lt;!-- Begin Default Content REMOVE THIS --&gt;
&lt;h1&gt;Congratulations&lt;/h1&gt;
This is your new Component${cursor}
&lt;!-- End Default Content REMOVE THIS --&gt;
&lt;/apex:component&gt;</template>
  <template
    context="com.salesforce.ide.ui.editors.templates.contextType.apexPage"
    description="Create a new Visualforce page"
    id="com.salesforce.ide.ui.editor.templates.apex.page.default"
    name="New Apex Page"
    autoinsert="false"
    >&lt;apex:page&gt;
&lt;!-- Begin Default Content REMOVE THIS --&gt;
&lt;h1&gt;Congratulations&lt;/h1&gt;
This is your new Page${cursor}
&lt;!-- End Default Content REMOVE THIS --&gt;
&lt;/apex:page&gt;</template>
  <template
    context="com.salesforce.ide.ui.editors.templates.contextType.apexTrigger"
    description="Create a new Apex trigger"
    id="com.salesforce.ide.ui.editor.templates.apex.trigger.default"
    name="New Apex Trigger"
    autoinsert="false"
    >trigger ${class_name} on ${object_name} (${trigger_operations}) {
    ${cursor}
}</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning application"
    id="com.salesforce.ide.ui.editor.templates.aura.app.default"
    name="Lightning Application"
    autoinsert="false"
    ><![CDATA[<aura:application>
	${cursor}
</aura:application>]]>
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning component"
    id="com.salesforce.ide.ui.editor.templates.aura.cmp.default"
    name="Lightning Component"
    autoinsert="false"
    ><![CDATA[<aura:component>
	${cursor}
</aura:component>]]>
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning interface"
    id="com.salesforce.ide.ui.editor.templates.aura.intf.default"
    name="Lightning Interface"
    autoinsert="false"
    ><![CDATA[<aura:interface description="Interface template">
	<aura:attribute name="example" type="String" default="" description="An example attribute."/>
	${cursor}
</aura:interface>]]>
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning event"
    id="com.salesforce.ide.ui.editor.templates.aura.evt.default"
    name="Lightning Event"
    autoinsert="false"
    ><![CDATA[<aura:event type="APPLICATION" description="Event template" ${cursor}/>]]>
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning tokens"
    id="com.salesforce.ide.ui.editor.templates.aura.tokens.default"
    name="Lightning Tokens"
    autoinsert="false"
    ><![CDATA[<aura:tokens >
	${cursor}
</aura:tokens>]]>
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning controller"
    id="com.salesforce.ide.ui.editor.templates.aura.controller.default"
    name="Lightning Controller"
    autoinsert="false"
    >({
	myAction : function(component, event, helper) {
		${cursor}
	}
})</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning helper"
    id="com.salesforce.ide.ui.editor.templates.aura.helper.default"
    name="Lightning Helper"
    autoinsert="false"
    >({
	helperMethod : function() {
		${cursor}
	}
})</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning style"
    id="com.salesforce.ide.ui.editor.templates.aura.style.default"
    name="Lightning Style"
    autoinsert="false"
    >.THIS {
}
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning documentation"
    id="com.salesforce.ide.ui.editor.templates.aura.auradoc.default"
    name="Lightning Documentation"
    autoinsert="false"
    ><![CDATA[<aura:documentation>
	<aura:description>Documentation</aura:description>
	<aura:example name="ExampleName" ref="exampleComponentName" label="Label">
		Example Description${cursor}
	</aura:example>
</aura:documentation>]]>
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning renderer"
    id="com.salesforce.ide.ui.editor.templates.aura.renderer.default"
    name="Lightning Renderer"
    autoinsert="false"
    >({
	// Your renderer method overrides go here
	${cursor}
})
</template>
<template
    context="com.salesforce.ide.ui.editors.templates.contextType.lightning"
    description="Create a new Lightning icon"
    id="com.salesforce.ide.ui.editor.templates.aura.svg.default"
    name="Lightning Icon"
    autoinsert="false"
    ><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="120px" height="120px" viewBox="0 0 120 120" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
	<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
		<path d="M120,108 C120,114.6 114.6,120 108,120 L12,120 C5.4,120 0,114.6 0,108 L0,12 C0,5.4 5.4,0 12,0 L108,0 C114.6,0 120,5.4 120,12 L120,108 L120,108 Z" id="Shape" fill="#2A739E"/>
		<path d="M77.7383308,20 L61.1640113,20 L44.7300055,63.2000173 L56.0543288,63.2000173 L40,99.623291 L72.7458388,54.5871812 L60.907727,54.5871812 L77.7383308,20 Z" id="Path-1" fill="#FFFFFF"/>
	</g>
</svg>]]>
</template>
</templates>